//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "WAJSNativeBufferBase.h"

#import "WAJSEventHandlerContextDelegate-Protocol.h"
#import "WAJSServiceProtocol-Protocol.h"

@class CContact, JSContext, JSVirtualMachine, NSArray, NSCondition, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSThread, WAAppTaskExtInfo, WAJSContextPluginScheduler, WAJSCoreServiceOpenData, WAPackageConfig, WAWebViewController, WxaExternalInfo;
@protocol WAJSCoreServiceDelegate, WAJSCoreServiceRemoteDelegate, WAJSServiceProtocol;

@interface WAJSCoreService : WAJSNativeBufferBase <WAJSEventHandlerContextDelegate, WAJSServiceProtocol>
{
    unsigned int _workerFlowId;
    unsigned int _debugModeType;
    BOOL _isDebugAndVConsoleOpen;
    BOOL _isIgnoreRemoteCheckDomain;
    WxaExternalInfo *_wxaExternalInfo;
    unsigned long long _appVersion;
    unsigned int _appServiceMaxDataSize;
    WAAppTaskExtInfo *_taskExtInfo;
    NSString *_enterPath;
    unsigned int _enterScene;
    NSArray *_templates;
    CContact *_contact;
    WAPackageConfig *_packageConfig;
    unsigned long long _taskRunningState;
    BOOL _jsThreadSuspended;
    BOOL _jsThreadDying;
    NSCondition *_condition;
    NSString *lastError;
    NSMutableSet *_setInjectedModule;
    unsigned int _subContextId;
    int _enterJsErrorFunctionCount;
    BOOL _stopReportJsErrorFunction;
    NSString *_relativeServiceJSUrl;
    BOOL _userScriptInjected;
    unsigned long long _closeTimeStampInMs;
    BOOL _useIsolatedContext;
    BOOL _threadInjected;
    BOOL _m_bIsStartFromPreloadAppTask;
    BOOL _hasInjectErr;
    NSString *_appID;
    JSVirtualMachine *_jsVirtualMachine;
    NSString *_instanceId;
    id <WAJSServiceProtocol> _serviceProtocol;
    id <WAJSCoreServiceDelegate> _delegate;
    id <WAJSCoreServiceRemoteDelegate> _remoteDelegate;
    WAWebViewController *_currentWebView;
    NSString *_serviceJSUrl;
    WAJSContextPluginScheduler *_pluginScheduler;
    unsigned long long _runningState;
    WAJSCoreServiceOpenData *_launchData;
    NSThread *_thread;
    NSMutableDictionary *_subContexts;
    NSMutableDictionary *_workerFlows;
    NSMutableDictionary *_timerObjs;
    NSMutableSet *_eventHandlers;
    NSMutableArray *_prevEvents;
    NSMutableDictionary *_extraInfo;
}

+ (void)setRefererInfo:(id)arg1 toDicParam:(id)arg2;
@property(retain) NSMutableDictionary *extraInfo; // @synthesize extraInfo=_extraInfo;
@property(retain) NSMutableArray *prevEvents; // @synthesize prevEvents=_prevEvents;
@property(retain) NSMutableSet *eventHandlers; // @synthesize eventHandlers=_eventHandlers;
@property(retain) NSMutableDictionary *timerObjs; // @synthesize timerObjs=_timerObjs;
@property BOOL hasInjectErr; // @synthesize hasInjectErr=_hasInjectErr;
@property(retain) NSMutableDictionary *workerFlows; // @synthesize workerFlows=_workerFlows;
@property(retain) NSMutableDictionary *subContexts; // @synthesize subContexts=_subContexts;
@property(retain) NSThread *thread; // @synthesize thread=_thread;
@property(nonatomic) BOOL m_bIsStartFromPreloadAppTask; // @synthesize m_bIsStartFromPreloadAppTask=_m_bIsStartFromPreloadAppTask;
@property(retain, nonatomic) WAJSCoreServiceOpenData *launchData; // @synthesize launchData=_launchData;
@property(nonatomic) unsigned long long runningState; // @synthesize runningState=_runningState;
@property(retain, nonatomic) WAJSContextPluginScheduler *pluginScheduler; // @synthesize pluginScheduler=_pluginScheduler;
@property(copy, nonatomic) NSString *serviceJSUrl; // @synthesize serviceJSUrl=_serviceJSUrl;
@property(nonatomic) __weak WAWebViewController *currentWebView; // @synthesize currentWebView=_currentWebView;
@property(nonatomic) __weak id <WAJSCoreServiceRemoteDelegate> remoteDelegate; // @synthesize remoteDelegate=_remoteDelegate;
@property(nonatomic) __weak id <WAJSCoreServiceDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <WAJSServiceProtocol> serviceProtocol; // @synthesize serviceProtocol=_serviceProtocol;
@property(copy) NSString *instanceId; // @synthesize instanceId=_instanceId;
@property(retain) JSVirtualMachine *jsVirtualMachine; // @synthesize jsVirtualMachine=_jsVirtualMachine;
@property BOOL threadInjected; // @synthesize threadInjected=_threadInjected;
@property(copy) NSString *appID; // @synthesize appID=_appID;
- (void).cxx_destruct;
- (void)receiveNotifiy:(id)arg1;
- (BOOL)isNativeWeApp;
- (id)jsCoreForIDWrap:(id)arg1;
- (void)jsCore_sendMessageToJSCDebugger:(id)arg1 jsCoreIDWrap:(id)arg2;
- (void)jsCore_disconnectJSCoreIDWrap:(id)arg1;
- (BOOL)jsCore_setupJSCDebuggerConnection:(CDUnknownBlockType)arg1 jsCoreIDWrap:(id)arg2;
- (BOOL)hasRemoreDebugger;
- (BOOL)hasLocalJSCore;
- (void)jSCore_invokeHandler:(id)arg1 param:(id)arg2 callbackID:(unsigned int)arg3 contextID:(unsigned int)arg4;
- (void)jSCore_publishHandler:(id)arg1 param:(id)arg2 webViewIDs:(id)arg3;
- (void)webCore_invoke:(id)arg1 param:(id)arg2;
- (void)stopRemoteDebug;
- (void)alterWillStop;
- (void)startRemoteDebug;
- (void)pluginCodeUsageHit:(id)arg1 version:(unsigned long long)arg2;
- (void)reportUserScriptInjectTime:(id)arg1 length:(long long)arg2 startTime:(unsigned long long)arg3;
- (void)reportScriptInjectTime:(id)arg1 length:(long long)arg2 startTime:(unsigned long long)arg3 endTime:(unsigned long long)arg4 preload:(BOOL)arg5;
- (void)performOnService:(id)arg1 selector:(SEL)arg2 withObject:(id)arg3;
- (void)sendCallInterfaceResult:(id)arg1 callID:(unsigned int)arg2;
- (void)evaluateJavascript:(id)arg1 withSourceURL:(id)arg2;
- (void)sendEvaluateJavascript:(id)arg1;
- (void)markSubPkgInjected:(id)arg1;
- (void)sendSubPkgReadyEvent:(id)arg1;
- (void)workThread_injectModuleAppServiceScript:(id)arg1;
- (void)injectModuleAppServiceWithModuleName:(id)arg1;
- (void)executeDelayToForegroundJSAPI;
- (void)resumeWorkingThreadToDie:(BOOL)arg1;
- (void)threadDidReceiveSuspend;
- (void)suspendWorkingThread;
- (void)checkWorkingThreadStatusWhenRunningStateChanged;
- (void)onRunningStateDidChanged:(unsigned long long)arg1;
- (void)onRunningStateWillChanged:(unsigned long long)arg1;
- (void)onWeAppEnterForeground:(id)arg1 isFromSystemAwake:(BOOL)arg2;
- (void)onWeAppEnterBackground:(long long)arg1;
- (void)asyncPrintConsoleLogToCurrentWebView:(id)arg1;
- (void)printConsoleLog:(id)arg1;
- (id)GetWebViewPluginByName:(id)arg1;
- (id)GetWeAppPluginByName:(id)arg1;
- (void)setWxaExternalInfo:(id)arg1;
- (unsigned int)getCurTaskRunningState;
- (BOOL)isService;
- (id)getWxaExternalInfo;
- (void)setIsIgnoreRemoteCheckDomain:(BOOL)arg1;
- (BOOL)isIgnoreRemoteCheckDomain;
- (void)setIsDebugAndVConsoleOpen:(BOOL)arg1;
- (BOOL)isDebugAndVConsoleOpen;
- (unsigned int)getDebugModeType;
- (unsigned long long)getAppVersion;
- (unsigned int)getAppType;
- (id)getAppId;
- (id)getEventHandler:(id)arg1;
- (void)removeHandler:(id)arg1;
- (void)reportApiCallResult:(id)arg1;
- (void)workThread_invokeCallbackHandler:(id)arg1;
- (void)endWithResult:(id)arg1 handler:(id)arg2 callbackID:(unsigned int)arg3 contextId:(unsigned int)arg4;
- (void)endWithResult:(id)arg1 handler:(id)arg2;
- (void)onTimer:(id)arg1;
- (unsigned int)addTimer:(unsigned int)arg1 withTime:(float)arg2 isRepeat:(BOOL)arg3;
- (void)notifyJSInjectedOnMainThread:(id)arg1;
- (BOOL)isPlayingInnerAudio;
- (void)stopPlayingBackgroundAudio;
- (BOOL)isPlayingBackgroundAudio;
- (void)setupTimerBlock:(id)arg1;
- (void)setupAPIBlock:(id)arg1 contextId:(unsigned int)arg2;
- (void)setupInvokeHandler:(id)arg1 param:(id)arg2 callbackId:(unsigned int)arg3 contextId:(unsigned int)arg4;
- (void)setupSystemLog:(id)arg1;
- (void)markThreadInjected;
- (void)injectJSBaseForAppBrandThread:(id)arg1 sdkScript:(id)arg2 privateNativeScriptBeforeUserScript:(id)arg3 userScript:(id)arg4 fromPreload:(BOOL)arg5;
- (void)initNativeGlobal;
- (void)reportJSErrorOnIsolatedContext:(id)arg1 context:(id)arg2;
- (void)reportJSError:(id)arg1;
- (id)getCurrentWebView;
- (id)wxAppInfoJSONWithTemplate:(id)arg1 contactAttribute:(id)arg2;
- (id)getPrivateNativeContextFilePath;
- (id)getPrivateNativeContextJSString;
- (id)getServiceSDKFilePath;
- (id)getServiceSDKContentString;
- (void)getScreenWidth:(double *)arg1 screenHeight:(double *)arg2;
- (id)getAppLaunchConfig;
- (void)injectJavaScript;
- (void)releaseJSContext;
- (void)initJSContext:(id)arg1;
- (void)setEnterPath:(id)arg1 withScene:(unsigned int)arg2 taskExtInfo:(id)arg3;
- (void)triggerStrictBanMode:(id)arg1;
- (void)checkUserAuthWithJSAPI:(id)arg1 handler:(CDUnknownBlockType)arg2 failHandler:(CDUnknownBlockType)arg3;
- (BOOL)checkJSAPIRunInMainThread:(id)arg1;
- (BOOL)checkJSAPIRunMode:(id)arg1;
- (id)getPermissionWithJSAPI:(id)arg1 byTempPermission:(id)arg2;
- (void)tryInjectJavaScript;
- (void)onAppBeforPushNavigation:(id)arg1 packageConfig:(id)arg2 extraInfo:(id)arg3;
- (BOOL)isUseIsolatedContext;
- (BOOL)isJSInjected;
- (void)performEventOnThread:(id)arg1;
- (void)sendInnerAppBrandEvent:(long long)arg1 serviceParam:(id)arg2 pluginParam:(id)arg3 webviewID:(unsigned long long)arg4;
- (void)sendInnerAppBrandEvent:(long long)arg1 param:(id)arg2 webviewID:(unsigned long long)arg3;
- (void)sendAppBrandEvent:(long long)arg1 param:(id)arg2 webviewID:(unsigned long long)arg3;
- (void)workthread_sendJSEventToService:(id)arg1;
- (void)innerSendJSEventToService:(id)arg1;
- (void)sendJSEventToService:(id)arg1 param:(id)arg2 webViewId:(unsigned int)arg3;
- (void)sendWebviewEventToService:(id)arg1 webViewId:(unsigned int)arg2;
- (void)sendErrorEvent:(id)arg1;
- (void)workThread_runOperationBlock:(CDUnknownBlockType)arg1;
- (void)asyncRunOperationBlockOnWorkThread:(CDUnknownBlockType)arg1;
- (void)stopAppBrandAndThread;
- (void)stopAppBrand;
- (void)startAppBrand:(id)arg1 packageConfig:(id)arg2 extraInfo:(id)arg3;
- (void)prepareTypedArray:(struct OpaqueJSContext *)arg1;
- (void)setupSubContext:(BOOL)arg1;
- (void)sendWorkerMessage:(unsigned int)arg1 msg:(id)arg2;
- (void)setupWeixinWorker;
- (void)startServiceThread;
- (void)runThread:(id)arg1;
- (void)loadAppConfig;
- (void)injectPublicServiceJSForPreload;
- (id)initForPreloadAppTask;
- (void)internalInit;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(retain) JSContext *context;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

