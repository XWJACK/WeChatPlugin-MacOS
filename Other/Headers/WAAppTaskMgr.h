//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMService.h"

#import "IVOIPUILogicMgrExt-Protocol.h"
#import "MMService-Protocol.h"
#import "WAAppTaskDelegate-Protocol.h"
#import "WAGameTaskMgrExt-Protocol.h"

@class MMTimer, NSMutableArray, NSMutableDictionary, NSString, WATopSessionTaskInfoStorage;

@interface WAAppTaskMgr : MMService <WAAppTaskDelegate, IVOIPUILogicMgrExt, WAGameTaskMgrExt, MMService>
{
    NSMutableArray *_arrJumpList;
    NSMutableDictionary *_dicAppID2Task;
    NSMutableDictionary *_dicUsername2Task;
    MMTimer *_timerCheckBackgroundTask;
    unsigned int lastMemoryWaringTimeStamp;
    NSString *_curBackToChatAppID;
    NSString *_curBackToChatDefaultName;
    WATopSessionTaskInfoStorage *_topSessionTaskInfoStorage;
    NSString *_curRemoteDebugAppID;
    NSString *_curRemoteDebugQrCodeID;
    NSString *_curDebugToolUrlString;
    unsigned long long _exitMode;
}

@property(nonatomic) unsigned long long exitMode; // @synthesize exitMode=_exitMode;
- (void).cxx_destruct;
- (void)updateCurrentRemoteDebugQrCodeID:(id)arg1;
- (id)getCurrentRemoteDebugQrCodeID;
- (id)getDebugToolUrlString;
- (void)updateDebugToolUrlString:(id)arg1;
- (void)updateCurrentRemoteDebugAppID:(id)arg1;
- (id)getCurrentRemoteDebugAppID;
- (void)onVideoVoipViewDidAppear:(id)arg1;
- (BOOL)isWeAppScreenOn;
- (void)removeCurBackToChatState;
- (BOOL)isAppTaskBackingToChat:(id)arg1;
- (id)getCurrentBackToChatAppTaskBannerLogoUrl;
- (id)getCurrentBackToChatAppTaskBannerText;
- (id)getCurrentBackToChatAppTask;
- (unsigned long long)getCurrentBackToChatDebugType;
- (id)getCurrentBackToChatStackPaths;
- (id)getCurrentBackToChatRelativePath;
- (id)getCurrentBackToChatAppId;
- (void)updateCurrentBannerText:(id)arg1;
- (void)updateCurrentBackToChatState;
- (void)markBackToChatWithAppID:(id)arg1 usrName:(id)arg2 relativePath:(id)arg3 debugModeType:(unsigned long long)arg4;
- (unsigned int)maxGameTaskRunningCount;
- (unsigned int)maxTaskRunningCount;
- (unsigned int)maxTaskWindowCount;
- (void)onTimerCheckBackgroundTask:(id)arg1;
- (void)invadateCheckBackgroundTaskTimer;
- (void)startCheckBackgroundTaskTimer;
- (void)taskEnterBackgroundWithAppID:(id)arg1 andRelativePath:(id)arg2;
- (void)taskBackgroundNetworkInterruptedTimeout:(id)arg1;
- (void)taskDidClose:(id)arg1;
- (void)taskDidOpen:(id)arg1;
- (void)removeTaskFromManager:(id)arg1;
- (BOOL)isExceedMaxWindowNumber;
- (void)checkAndCloseExceedMaxConcurrentCountTask;
- (BOOL)isGameBackgroundTaskAllowToClose:(id)arg1;
- (void)checkGameAppBackgroundTask:(id)arg1;
- (void)closeAllWebViewInNavigatorTask;
- (void)closeTimeoutBackgoundTask;
- (void)closeBackgroundTask:(BOOL)arg1;
- (void)closeAllTaskUseTips:(id)arg1 tipContent:(id)arg2 reason:(unsigned long long)arg3;
- (void)closeAllTaskUseTips;
- (void)onAppTaskClose:(id)arg1;
- (void)closeGameTaskOnNavigationController:(id)arg1;
- (void)closeTask:(id)arg1;
- (void)deleteTask:(id)arg1;
- (void)clearTaskDataAndNotifyTerminate:(id)arg1 isCallCloseTask:(BOOL)arg2;
- (void)clearTaskDataAndNotifyTerminate:(id)arg1;
- (id)allTaskArray;
- (BOOL)isNeedCloseAppTaskToOpenPagePath:(id)arg1 appID:(id)arg2 appType:(unsigned int)arg3;
- (BOOL)isNeedNewTask:(id)arg1 pagePath:(id)arg2 appType:(unsigned int)arg3;
- (id)getTaskWithAppID:(id)arg1;
- (id)getAndNewTaskIfNotExistWithAppID:(id)arg1 contact:(id)arg2 relativeURL:(id)arg3 taskExtInfo:(id)arg4 debugModeType:(unsigned int)arg5;
- (id)getAndNewTaskIfNotExistWithUserName:(id)arg1;
- (BOOL)isExistAppLivePlaying;
- (BOOL)isExistAppLiveForegroundPlaying;
- (BOOL)isExistAppLivePushing;
- (BOOL)isExistAppInnerAudioPlaying;
- (BOOL)isExistAppRecording;
- (BOOL)hasGameTaskOnNavigationController:(id)arg1;
- (id)firstAppIdFromRootViewController:(id)arg1;
- (id)getFirstWAAppTaskInMgr;
- (id)getForegroundAppID;
- (unsigned long long)getAppTaskCount;
- (unsigned long long)getAppTaskWindowCount;
- (BOOL)getWeAppTaskInfo:(id)arg1;
- (void)sendJSEventToTaskAllWebView:(id)arg1 withAppID:(id)arg2 param:(id)arg3 toWebviews:(id)arg4;
- (void)closeTaskWithAppID:(id)arg1;
- (BOOL)isReachMaxWebViewDepthWithAppID:(id)arg1;
- (void)openChildWebViewWithappID:(id)arg1 relativeURL:(id)arg2 childExtraInfo:(id)arg3 fromParent:(id)arg4 isPopAllParent:(BOOL)arg5 errorHandler:(CDUnknownBlockType)arg6;
- (void)openChildWebViewWithappID:(id)arg1 relativeURL:(id)arg2 childExtraInfo:(id)arg3 fromParent:(id)arg4 isPopParent:(BOOL)arg5 errorHandler:(CDUnknownBlockType)arg6;
- (void)openAppTaskWithContact:(id)arg1 openInfo:(id)arg2 extInfo:(id)arg3 errorHandler:(CDUnknownBlockType)arg4;
- (void)onServiceEnterBackground;
- (void)onServiceClearData;
- (void)onServiceReloadData;
- (void)onServiceInit;
- (void)removeTopSesionTaskInfo;
- (void)saveTopSessionTaskInfo:(id)arg1;
- (void)loadTopSessionTaskInfo;
- (void)dealloc;
- (id)init;
- (BOOL)isFormJumpWeAppRingWithFromAppId:(id)arg1 toAppId:(id)arg2;
- (unsigned long long)getJumpRoleWithAppId:(id)arg1;
- (void)addJumpWeAppRelationWithFromAppId:(id)arg1 toAppId:(id)arg2 jumpScene:(unsigned long long)arg3;
- (void)generateJumpWeAppOperation:(id *)arg1 withAppId:(id)arg2 extInfo:(id)arg3;
- (id)lastAppIDWithViewController:(id)arg1;
- (void)addNativeJumpWeAppRefererInfoIfHave:(id)arg1 openInfo:(id)arg2 extInfo:(id)arg3;
- (void)clearJumpList;
- (void)removeJumpWeAppLastInfo;
- (id)getAppIdListFromJumpWeAppList;
- (void)getJumpWeAppLastInfo:(id *)arg1 fromInfo:(id *)arg2 withAppId:(id)arg3;
- (void)addJumpWeAppRelationIfHave:(id)arg1;
- (void)processJumpWeAppBeforeOpenTaskWithAppId:(id)arg1 openInfo:(id)arg2 extInfo:(id)arg3 getOperation:(id *)arg4;
- (void)jumpWeAppCateGoryOnServiceClearData;
- (void)jumpWeAppCategoryOnServiceReloadData;
- (void)jumpWeAppCategoryOnServiceInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

