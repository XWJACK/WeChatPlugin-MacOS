//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MMService.h"

#import "IMessageExt-Protocol.h"
#import "MMCGIDelegate-Protocol.h"
#import "MMResourceMgrExt-Protocol.h"
#import "MMService-Protocol.h"

@class NSDictionary, NSMutableDictionary, NSString, WAAppBrandNotifyStorage, WAAppBrandRedDotNotifyStorage, WAEnableCopyPathMenuNotifyStorage;

@interface WAConfigMgr : MMService <MMResourceMgrExt, MMCGIDelegate, IMessageExt, MMService>
{
    NSMutableDictionary *_dicAppID2ConfigJSON;
    NSMutableDictionary *_dicAppID2ContactAttribute;
    NSMutableDictionary *_dicAppID2CertDic;
    WAAppBrandNotifyStorage *m_notifyStorage;
    WAAppBrandRedDotNotifyStorage *m_redDotNotifyStorage;
    WAEnableCopyPathMenuNotifyStorage *m_enableCopyPathMenuNotifyStorage;
    NSMutableDictionary *dicUseVConsoleApp;
    BOOL m_ignoreRedDotNotify;
    NSMutableDictionary *_userWeAppMonitor;
    long long _enmIsolatedContext;
    BOOL _useCommandBuffer;
    long long _useCommandBufferScene;
    BOOL _forceReportGamePerf;
    NSDictionary *_dicSystemConfig;
    NSString *_mmUserAgent;
}

+ (BOOL)isUseNewPackageSweepLogic;
+ (BOOL)isClosePubDelayUnpack;
+ (BOOL)isCloseSearchEntry;
+ (long long)getABTestNearByEntranceMode;
+ (BOOL)isOpenMainFrameTaskBarBatchAttrSync;
+ (BOOL)isOpenMainFrameTaskBar;
+ (BOOL)isOpenFTSSearchWeappGameSection;
+ (BOOL)isOpenGameEntry;
+ (BOOL)isOpenNewNearEntry;
+ (BOOL)isDeviceSupportWeApp;
+ (BOOL)isOverSeaUser;
@property(retain) NSString *mmUserAgent; // @synthesize mmUserAgent=_mmUserAgent;
@property(retain) NSDictionary *dicSystemConfig; // @synthesize dicSystemConfig=_dicSystemConfig;
@property BOOL forceReportGamePerf; // @synthesize forceReportGamePerf=_forceReportGamePerf;
- (void).cxx_destruct;
- (int)getBenchMarkLevel;
- (void)onResponseGetAppInfoList:(id)arg1;
- (void)OnResponseCGI:(BOOL)arg1 sessionId:(unsigned int)arg2 cgiWrap:(id)arg3;
- (BOOL)isWeAppIsolatedContext;
- (long long)useCommandBufferScene;
- (void)setUseGameCommandBuffer:(BOOL)arg1 scene:(long long)arg2;
- (BOOL)isUseGameCommandBuffer;
- (BOOL)isGameIsolatedContext;
- (void)setIsolatedContext:(BOOL)arg1;
- (BOOL)isInsertToWebLayer;
- (void)doGetAppConfigCgiWithItems:(id)arg1;
- (void)asyncUpdateWeAppConfigInfo:(id)arg1;
- (id)overseasForbbidenUrlWithAppid:(id)arg1;
- (id)scanQrCodeOffLineForbbidenUrlWithAppid:(id)arg1;
- (id)waappBanSceneWithAppid:(id)arg1 banScene:(unsigned long long)arg2;
- (id)waappDetailInfoViewURLWithAppid:(id)arg1;
- (id)lowVersionWithAppid:(id)arg1 updateType:(unsigned long long)arg2;
- (id)forbbidenUrlWithAppid:(id)arg1 offShelfType:(unsigned long long)arg2;
- (id)exposeURLForKFSessionWithAppid:(id)arg1 businessAppid:(id)arg2 pageId:(id)arg3;
- (id)exposeURLWithUsername:(id)arg1 msgid:(id)arg2 templateid:(id)arg3;
- (id)exposeURLWithAppid:(id)arg1 msgid:(id)arg2;
- (id)exposeURLWithAppid:(id)arg1 pageid:(id)arg2 from:(unsigned long long)arg3 debugMode:(unsigned long long)arg4 appVersion:(unsigned int)arg5 exposeExtraInfo:(id)arg6;
- (id)feedbackURLWithAppid:(id)arg1;
- (void)deleteDebugModeAppInfo:(id)arg1 debugType:(unsigned long long)arg2;
- (void)insertDeubgModeAppInfo:(id)arg1;
- (id)getSaveInfoKeyWithAppid:(id)arg1 debugType:(unsigned int)arg2;
- (unsigned int)redDotPushTime;
- (id)redDotMsgId;
- (void)markOpenWeappDestop;
- (void)clearRedDotNotifyActivities;
- (void)uploadLocation;
- (void)uploadUserLocationIfNeed;
- (BOOL)shouldUploadUserLocation;
- (void)uploadRedDotExposeIfNeeded;
- (BOOL)shouldUploadNewFunctionRedDotExpose;
- (BOOL)shouldUploadNearByRetDotExpose;
- (BOOL)shouldShowRedDotAsGameWhatsNew;
- (BOOL)shouldShowRedDotAsNearByWeappStore;
- (BOOL)shouldShowRedDotAsNewFunction;
- (BOOL)shouldShowCopyPathMenu:(id)arg1;
- (unsigned int)nearByRedDotShowType;
- (BOOL)shouldShowRedDot;
- (void)endIgnoreRedDotNotify;
- (void)startIgnoreRedDotNotify;
- (BOOL)shouldIgnoreRedDotNotify;
- (void)handleUpdateWxaListNotify:(id)arg1;
- (void)parseDebugAppCodeUpdatedToPC:(id)arg1;
- (void)parseDebugAppCodeUpdated:(id)arg1;
- (void)onGetNewXmlMsg:(id)arg1 type:(id)arg2 msgData:(id)arg3;
- (void)saveRedDotNotifyStorage:(id)arg1;
- (void)saveLocationUploadSwitchActivity:(id)arg1;
- (void)saveRedDotSwitchActivity:(id)arg1;
- (void)loadRedDotNotifyStorage;
- (void)saveEnableCopyPathMenuNotifyStorage:(id)arg1;
- (void)loadEnableCopyPathMenuNotifyStorage;
- (void)saveNotifyStorage:(id)arg1;
- (void)loadNotifyStorage;
- (void)clearDebugModeDownloadStateWithAppid:(id)arg1;
- (void)setDebugModeDownloadPkgCompleteWithAppid:(id)arg1 debugType:(unsigned long long)arg2 packageType:(unsigned long long)arg3 moduleName:(id)arg4 value:(BOOL)arg5;
- (BOOL)isDebugModeAlreadyUpdatePkgWithAppid:(id)arg1 debugType:(unsigned long long)arg2 packageType:(unsigned long long)arg3 moduleName:(id)arg4;
- (id)getAllDebugModeAppInfoForceSave:(BOOL)arg1;
- (id)getDeubgModeAppInfoByName:(id)arg1 debugType:(unsigned long long)arg2;
- (id)getPublicResDebugModeAppInfo;
- (BOOL)isEnableWeAppMonitor:(id)arg1;
- (void)enableWeAppMonitor:(id)arg1 enable:(BOOL)arg2;
- (id)dicUseVConsoleFilePath;
- (void)archiveDictionary:(id)arg1 toFile:(id)arg2;
- (BOOL)closeUseVConsoleWithAppID:(id)arg1;
- (BOOL)openUseVConsoleWithAppID:(id)arg1;
- (BOOL)pageIsUseVConsoleForAppID:(id)arg1;
- (id)getMMUserAgent;
- (void)updateMMUserAgent;
- (id)getAppWebPageFullUrlWithAppid:(id)arg1 version:(unsigned long long)arg2 relativePath:(id)arg3 isDebugMode:(unsigned long long)arg4;
- (id)getCdnBaseUrlStrWithAppContact:(id)arg1;
- (id)getCdnBaseUrlStrIsDebugMode:(unsigned long long)arg1;
- (BOOL)isOpenModuleMode;
- (BOOL)isOpenGlobalLocalSearch;
- (BOOL)isOpenFindFriendEntry;
- (void)onServiceClearData;
- (void)onServiceReloadData;
- (void)onServiceInit;
- (void)dealloc;
- (id)init;
- (void)updateSystemSettingData:(id)arg1;
- (void)loadLocalSystemSettingData;
- (void)loadSystemSettingData;
- (void)onResUpdateFinish:(long long)arg1 resType:(unsigned int)arg2 subResType:(unsigned int)arg3;
- (id)systemSetting;
- (void)systemSettingCategoryOnServiceClearData;
- (void)systemSettingCategoryOnServiceReloadData;
- (void)systemSettingCategoryOnServiceInit;
- (void)contactAttributeCategoryOnServiceClearData;
- (void)contactAttributeCategoryOnServiceReloadData;
- (void)contactAttributeCategoryOnServiceInit;
- (void)setContactAttributeWithAppID:(id)arg1 appBrandInfo:(id)arg2;
- (id)contactAttributeWithAppID:(id)arg1;
- (id)getCertificateDataListWithAppID:(id)arg1 appVersion:(unsigned int)arg2;
- (void)setCertificateDataList:(id)arg1 withAppID:(id)arg2 appVersion:(unsigned int)arg3;
- (void)loadCertificateDataListFromData:(id)arg1 withAppID:(id)arg2 appVersion:(unsigned int)arg3;
- (void)networkCertificateCategoryOnServiceClearData;
- (void)networkCertificateCategoryOnServiceReloadData;
- (void)networkCertificateCategoryOnServiceInit;
- (id)appConfigAttiForLoadingView:(id)arg1 page:(id)arg2;
- (void)setAppConfigAttiForLoadingView:(id)arg1;
- (id)objectForAppID:(id)arg1 andPaths:(id)arg2;
- (id)dictionaryForAppID:(id)arg1 andPaths:(id)arg2;
- (BOOL)boolForAppID:(id)arg1 andPath:(id)arg2;
- (id)stringForAppID:(id)arg1 andPaths:(id)arg2;
- (BOOL)hasKeyForAppID:(id)arg1 andPath:(id)arg2;
- (void)setAppConfigJSON:(id)arg1 forAppID:(id)arg2;
- (BOOL)appTaskEnablePreloadForAppID:(id)arg1;
- (id)getGlobalConfig:(id)arg1 appId:(id)arg2;
- (void)makeNativeConfig:(id)arg1;
- (id)appConfigJsonTextForAppService:(id)arg1;
- (id)networkTimeoutAttributeForAppID:(id)arg1;
- (id)entryPagePathForAppID:(id)arg1;
- (id)tabAttributesForAppID:(id)arg1;
- (id)pageTabAttributesForAppID:(id)arg1 page:(id)arg2;
- (BOOL)isTabPageWithPagePath:(id)arg1 appID:(id)arg2;
- (id)pageWindowAttributesForAppID:(id)arg1;
- (BOOL)customOpenPage:(id)arg1 page:(id)arg2;
- (id)pageWindowAttributesForAppID:(id)arg1 page:(id)arg2;
- (void)loadAppConfigWithAppID:(id)arg1 data:(id)arg2;
- (void)appConfigJSONCategoryOnServiceClearData;
- (void)appConfigJSONCategoryOnServiceReloadData;
- (void)appConfigJSONCategoryOnServiceInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

