//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class JSContext, NSMutableDictionary;

@interface WAJSNativeBufferBase : NSObject
{
    unsigned int _bufferIDSequence;
    NSMutableDictionary *_dicID2Buffer;
    BOOL _useCompatibleModeConvertData;
    BOOL _useBase64gEncodingDataProtocol;
    unsigned int _nativeBufferSizeLimit;
    unsigned int _nativeBufferQueueLimit;
    JSContext *_context;
    NSMutableDictionary *_mapNativeBuffer;
}

@property(retain, nonatomic) NSMutableDictionary *mapNativeBuffer; // @synthesize mapNativeBuffer=_mapNativeBuffer;
@property(nonatomic) BOOL useBase64gEncodingDataProtocol; // @synthesize useBase64gEncodingDataProtocol=_useBase64gEncodingDataProtocol;
@property unsigned int nativeBufferQueueLimit; // @synthesize nativeBufferQueueLimit=_nativeBufferQueueLimit;
@property unsigned int nativeBufferSizeLimit; // @synthesize nativeBufferSizeLimit=_nativeBufferSizeLimit;
@property BOOL useCompatibleModeConvertData; // @synthesize useCompatibleModeConvertData=_useCompatibleModeConvertData;
@property(retain) JSContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (id)genBufferID;
- (id)parseNative2SdkNativeBufferParam:(id)arg1 getError:(id *)arg2;
- (id)parseInvokeHandlerNativeBufferParam:(id)arg1 getError:(id *)arg2;
- (unsigned int)nativeBufferTotalSize;
- (id)getBufferItem:(id)arg1;
- (id)popNativeBuffer:(id)arg1;
- (id)addNativeBuffer:(id)arg1;
- (id)insertNativeArrayBuffer:(int)arg1 bufferId:(int *)arg2;
- (void)removeNativeArrayBuffer:(int)arg1;
- (void)injectWeiXinArrayBuffer:(id)arg1;
- (id)addSharedBuffer:(void *)arg1 length:(unsigned long long)arg2;
- (void)checkNextLock:(id)arg1;
- (BOOL)checkCanWrite:(id)arg1 workerId:(unsigned int)arg2 blocked:(char *)arg3;
- (BOOL)checkCanRead:(id)arg1 workerId:(unsigned int)arg2 blocked:(char *)arg3;
- (BOOL)checkCurrentWorkerLocked:(id)arg1 workerId:(unsigned int)arg2;
- (long long)getLockNum:(id)arg1 isWriteLock:(BOOL)arg2;
- (void)releaseLock:(id)arg1 workerId:(unsigned int)arg2;
- (void)setupSharedBufferExtention:(id)arg1 workerId:(unsigned int)arg2;
- (void)injectWeiXinNativeBuffer:(id)arg1 isShared:(BOOL)arg2 workerId:(unsigned int)arg3;
- (void)dealloc;
- (id)init;

@end

